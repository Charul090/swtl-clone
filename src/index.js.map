{
  "version": 3,
  "sources": ["../symbol.js", "../html.js", "../render.js", "../router.js", "../HtmlPage/index.js", "../await.js", "../main.js", "../index.js"],
  "sourcesContent": ["export const COMPONENT_SYMBOL = Symbol('component');\nexport const AWAIT_SYMBOL = Symbol('await');", "import { COMPONENT_SYMBOL } from \"./symbol.js\";\n\nconst TRAVERSAL_MODE = {\n    DATA: 'DATA',\n    COMPONENT: 'COMPONENT'\n};\n\nconst LEVEL = {\n    PARENT: 'PARENT',\n    CHILD: 'CHILD'\n};\n\nfunction getProps (i, j, statics, dynamics) {\n    const props = {};\n    let property = '';\n    let value = '';\n    let isValue = false;\n    let isKey = false;\n    \n    while (statics[i][j] && statics[i][j] !== '>') {\n        const isEmptyString = statics[i][j].trim() === '';\n        const isEquals = statics[i][j] === '=';\n        const isSingleInvertedComma = statics[i][j] === \"'\";\n        const isDoubleInvertedComma = statics[i][j] === '\"';\n        const isForwardSlash = statics[i][j] === '/';\n        const isCurrentCharPeriod = statics[i][j] === '.';\n        const isCurrentIndexEndOfStatics = j === statics[i].length - 1;\n        const isNextIndexEndOfStatics = j === statics[i].length - 2;\n        const isNextCharSingleInvertedComma = statics[i][j+1] === \"'\";\n        const isNextCharDoubleInvertedComma = statics[i][j+1] === '\"';\n        const isDestructuringProps = statics[i].slice(j, j+4) === '...' && j === statics[i].length - 3;\n\n        if (!isKey && !isValue && isCurrentCharPeriod && isDestructuringProps) {\n            Object.keys(dynamics[i]).forEach(propKey => {\n                props[propKey] = dynamics[i][propKey];\n            });\n            i++;\n            j = 0;\n        } else if (!isValue && !isKey && !isEmptyString && !isDoubleInvertedComma && !isSingleInvertedComma && !isForwardSlash) {\n            isKey = true;\n            property += statics[i][j];\n        } else if (isKey && !isValue && isEquals && (isCurrentIndexEndOfStatics || (isNextIndexEndOfStatics && (isNextCharSingleInvertedComma || isNextCharDoubleInvertedComma))) && dynamics[i] != null ) {\n            props[property] = dynamics[i];\n            property = '';\n            isKey = false;\n            isValue = false;\n            i++;\n            j = 0;\n            continue;\n        } else if (isKey && !isValue && isEquals) {\n            isKey = false;\n            isValue = true;\n            if (isNextCharDoubleInvertedComma || isNextCharSingleInvertedComma) {\n                j++;\n            }\n        } else if (isKey && !isValue && property && (isEmptyString || isForwardSlash)) {\n            props[property] = true;\n            property = '';\n            isKey = false;\n        } else if (isKey && !isValue) {\n            property += statics[i][j];\n        } else if (isValue && !isKey && !isEquals && !isDoubleInvertedComma && !isSingleInvertedComma && !isForwardSlash && !isEmptyString) {\n            value += statics[i][j];\n        } else if (isValue && !isKey && (isEmptyString || isForwardSlash || isDoubleInvertedComma || isSingleInvertedComma)) {\n            props[property] = value;\n            property = '';\n            value = '';\n            isValue = false;\n            isKey = false;\n        }\n\n        j++;\n    }\n\n    if (property) {\n        props[property] = value ? value : true;\n    }\n    const isComponentClosed = statics[i][j - 1] === '/';\n\n    return { props, isComponentClosed, updatedIndexes: [i,j] };\n}\n\nexport function* html (statics, ...dynamics) {\n    if (dynamics.length === 0) {\n        yield* statics\n        return;\n    }\n    const isComponentPresent = dynamics.some(dynamicValue => typeof dynamicValue === 'function');\n    if (!isComponentPresent) {\n        yield* statics.reduce((acc, curr, index) => {\n            return [...acc, curr, ...(dynamics[index] != null ? [dynamics[index]] : [])]\n        }, []);\n        return;\n    }\n\n    let currentTraversalMode = TRAVERSAL_MODE.DATA;\n    let currentLevel = LEVEL.PARENT;\n    let htmlString = '';\n    const componentStack = [];\n    for(let i = 0; i < statics.length; i++) {\n        for(let j = 0; j <statics[i].length; j ++) {\n            if (currentTraversalMode === TRAVERSAL_MODE.DATA) {\n                if (j === statics[i].length - 1 && statics[i][j] === '<') {\n                    if (htmlString) {\n                        yield htmlString;\n                        htmlString = '';\n                    }\n                    const component = { fn: dynamics[i], children: [], kind: COMPONENT_SYMBOL };;\n                    i += 1;\n                    j = 0;\n                    const { props, isComponentClosed, updatedIndexes } = getProps(i, j, statics, dynamics);\n                    [i, j] = updatedIndexes;\n                    component.props = props;\n                    if (currentLevel === LEVEL.CHILD) {\n                        componentStack[componentStack.length - 1].children.push(component);\n                        if (!isComponentClosed) {\n                            componentStack.push(component);\n                        }\n                    } else if (!isComponentClosed) {\n                        componentStack.push(component);\n                        currentLevel = LEVEL.CHILD;\n                        currentTraversalMode = TRAVERSAL_MODE.COMPONENT;\n                        if (j === statics[i].length - 1 && dynamics[i] != null ) {\n                            component.children.push(dynamics[i]);\n                            continue;\n                        }\n                    } else {\n                        yield component;\n                    }\n                } else if (j === statics[i].length - 1 && dynamics[i] != null ) {\n                    yield* [htmlString + statics[i][j], dynamics[i]];\n                    htmlString = ''\n                } else {\n                    htmlString += statics[i][j];\n                }\n                if (j === statics[i].length - 1 && dynamics[i] != null ) {\n                    if (htmlString) {\n                        yield htmlString;\n                        htmlString = ''\n                    }\n                    yield dynamics[i];\n                }\n            } else if (currentTraversalMode === TRAVERSAL_MODE.COMPONENT) {\n                // component encountered\n                if (j === statics[i].length - 1 && statics[i][j] === '<') {\n                    if (htmlString) {\n                        componentStack[componentStack.length - 1].children.push(htmlString);\n                        htmlString = '';\n                    }\n                    const component = { fn: dynamics[i], children: [], kind: COMPONENT_SYMBOL };;\n                    i += 1;\n                    j = 0;\n                    const { props, isComponentClosed, updatedIndexes } = getProps(i, j, statics, dynamics);\n                    [i, j] = updatedIndexes;\n                    component.props = props;\n                    componentStack[componentStack.length - 1].children.push(component);\n                    if (!isComponentClosed) {\n                        componentStack.push(component);\n                    }\n                    \n                    if (j === statics[i].length - 1 && dynamics[i] != null ) {\n                        component.children.push(dynamics[i]);\n                    }\n                    // component closing tag encountered\n                } else if (statics[i][j] === '<' && statics[i][j+1] === '/' && statics[i][j + 2] === '/') {\n                    const component = componentStack.pop();\n                    if (htmlString) {\n                        component.children.push(htmlString);\n                        htmlString = '';\n                    }\n                    if (componentStack.length === 0) {\n                        yield component;\n                        currentLevel = LEVEL.PARENT;\n                        currentTraversalMode = TRAVERSAL_MODE.DATA;\n                    }\n                    j+= 3;\n                } else if (j === statics[i].length - 1 && dynamics[i] != null ) {\n                    componentStack[componentStack.length - 1].children.push(htmlString + statics[i][j], dynamics[i]);\n                    htmlString = '';\n                } else {\n                    htmlString += statics[i][j];\n                }\n            }\n        }\n    }\n    if (htmlString) {\n        yield htmlString;\n    }\n}\n", "import { html } from \"./html.js\";\nimport { AWAIT_SYMBOL, COMPONENT_SYMBOL } from \"./symbol.js\";\n\nasync function getValueFromReadableStream (readableStream) {\n    const textDecoder = new TextDecoder();\n    let response = '';\n    for await(const chunk of readableStream) {\n        response += textDecoder.decode(chunk);\n    }\n\n    return response;\n}\n\nasync function* serializeChunk (chunk, promiseArray) {\n    if (typeof chunk === 'string' || typeof chunk === 'boolean' || typeof chunk === 'number') {\n        yield chunk\n    } else if (Array.isArray(chunk)) {\n        yield* processTemplate(chunk, promiseArray);\n    } else if (chunk?.kind === COMPONENT_SYMBOL && chunk?.fn.kind === AWAIT_SYMBOL) {\n        const { promise } = chunk.props;\n        const { template } = chunk.fn({ children: chunk.children });\n        const id = promiseArray.length;\n        promiseArray.push(\n            promise()\n                .then((data) => {\n                    return { id, template: template({ success: true, error: false, pending: false }, data, null) };\n                })\n                .catch((error) => {\n                    return { id, template: template({ success: false, error: true, pending: false }, null, error)};\n                })\n        );\n        yield* processTemplate(html`<awaiting-promise style=\"display:contents\" data-id=\"${String(id)}\">${template({ success: false, error: false, pending: true }, null, null)}</awaiting-promise>`, promiseArray);\n    } else if (chunk?.kind === COMPONENT_SYMBOL) {\n        yield* serializeChunk(chunk.fn({ children: chunk.children, ...chunk.props }), promiseArray);\n    } else if (chunk[Symbol.iterator] || chunk[Symbol.asyncIterator]) {\n        yield* processTemplate(chunk, promiseArray);\n    } else if (String(chunk) === '[object Response]') {\n        yield await getValueFromReadableStream(chunk.body);\n    } else {\n        const stringifiedChunk = chunk.toString();\n        yield stringifiedChunk === '[object Object]' ? JSON.stringify(chunk) : stringifiedChunk;\n    }\n}\n\nasync function* processTemplate (html, promiseArray) {\n    for await(const chunk of html) {\n        yield* serializeChunk(chunk, promiseArray); \n    }\n}\n\nexport async function* render (parsedData) {\n    const promiseArray = [];\n    yield* processTemplate(parsedData, promiseArray);\n\n    while (promiseArray.length > 0) {\n        const { id, template } = await Promise.race(promiseArray);\n        promiseArray.splice(id, 1);\n        yield* render(html`\n        <template data-id=\"${String(id)}\">${template}</template>\n        <script>\n        {\n            const currElem = document.querySelector('awaiting-promise[data-id=\"${String(id)}\"]');\n            const newElem = document.querySelector('template[data-id=\"${String(id)}\"]').content.cloneNode(true);\n            currElem.replaceWith(newElem);\n        }\n        </script>\n        `)\n    }\n};\n\nexport async function renderToString(renderResult) {\n    let result = \"\";\n    const obj = render(renderResult);\n    while(true) {\n        const { value, done } = await obj.next();\n        if (done) {\n            break;\n        } else {\n            result += value;\n        }\n    }\n  \n    return result;\n  }\n", "import { render } from './render';\n\nasync function getHtmlResponseForTemplate(template) {\n    const responseIterator = render(template);\n    const textEncoder = new TextEncoder();\n    const readAbleStream = new ReadableStream({\n        pull: async (controller) => {\n            const { value, done } = await responseIterator.next();\n            if (done) {\n                controller.close();\n            } else {\n                const byteHtml = textEncoder.encode(value);\n                controller.enqueue(byteHtml);\n            }\n        }\n    });\n\n    const headers = { \n        'Content-Type': 'text/html'\n    };\n    const response = new Response(readAbleStream, { headers });\n    return response;\n};\nexport class Router {\n    /**\n     * \n     * @param {*} routes Array<{ path: string, render: (params, query, request) => string, plugin }>\n     * @param {*} fallback string\n     * @param {*} baseHref string\n     * @param {*} plugins Array<{ name: string, beforeResponse: () => any }>\n     */\n    constructor({ routes, fallback, baseHref = '', plugin }) {\n        this.routes = routes;\n        this.fallback = fallback;\n        this.plugin = plugin;\n        this.baseHref = baseHref\n    }\n\n    async handleRequest (req) {\n        const url = req.url;\n        let pathInfo;\n        const matchedRoute = this.routes.find(route => {\n            const urlPattern = new URLPattern({ pathname: this.baseHref ? this.baseHref + '/' : this.baseHref + route.path });\n            const isMatch = urlPattern.test(url);\n            if (isMatch) {\n                pathInfo = urlPattern.exec(url);\n            }\n\n            return isMatch;\n        });\n\n        if (!matchedRoute) {\n            return await getHtmlResponseForTemplate(this.fallback || '');\n        }\n\n        const search = {};\n        const searchParams = new URLSearchParams(pathInfo.search.groups[0]);\n        const params = pathInfo.pathname.groups;\n        \n        if (matchedRoute.plugin ?? this.plugin) {\n            const plugins = matchedRoute.plugin ?? this.plugin;\n            for(const plugin of plugins) {\n                const pluginRes = await plugin.beforeResponse(params, search, req);\n                if (String(pluginRes) === '[object Response]') {\n                    return pluginRes;\n                }\n            };\n            \n            return await getHtmlResponseForTemplate(pluginRes);\n        }\n        \n        \n        for (const [key, value] of searchParams.entries()) {\n            search[key] = value;\n        }\n\n        const htmlTemplate = matchedRoute.render(params, search, req);\n        return await getHtmlResponseForTemplate(htmlTemplate);\n    }\n}\n", "import { html } from '../html.js';\n\nexport function HtmlPage({children, title}) {\n  return html`\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,viewport-fit=cover\">\n        <meta name=\"Description\" content=\"\">\n        <title>${title ?? ''}</title>\n      </head>\n      <body>\n        <ul>\n          <li><a href=\"/\">home</a></li>\n          <li><a href=\"/a\">a</a></li>\n          <li><a href=\"/b\">b</a></li>\n        </ul>\n        ${children}\n        <script>\n          let refreshing;\n          async function handleUpdate() {\n            // check to see if there is a current active service worker\n            const oldSw = (await navigator.serviceWorker.getRegistration())?.active?.state;\n\n            navigator.serviceWorker.addEventListener('controllerchange', async () => {\n              if (refreshing) return;\n\n              // when the controllerchange event has fired, we get the new service worker\n              const newSw = (await navigator.serviceWorker.getRegistration())?.active?.state;\n\n              // if there was already an old activated service worker, and a new activating service worker, do the reload\n              if (oldSw === 'activated' && newSw === 'activating') {\n                refreshing = true;\n                window.location.reload();\n              }\n            });\n          }\n\n          handleUpdate();\n        </script>\n      </body>\n    </html>\n  `\n}\n", "import { AWAIT_SYMBOL } from \"./symbol.js\";\n\nexport function Await ({ children }) {\n    const template = children.find(element => typeof element === 'function');\n    return {\n        template\n    }\n};\n\nAwait.kind = AWAIT_SYMBOL;\n\nexport const when = (condition, template) => {\n    return (condition ? template() : '');\n};\n", "import { Router } from './router';\nimport { render } from './render';\nimport { HtmlPage } from './HtmlPage/index';\nimport { html } from './html';\nimport { Await, when } from './await';\n\nexport const router = new Router(\n    {\n        routes: [\n            {\n                path: '/a',\n                render: () => (`<html><body><h1>About</h1></body></html>`)\n            },\n            {\n                path: '/b',\n                plugin: [{ name: 'b plugin', beforeResponse: async () =>  {\n                    const textEncoder = new TextEncoder();\n                    return new Response(textEncoder.encode(`<html><body><h1>Render Local</h1></body></html>`));\n                }}]\n            },\n            {\n                path: '/',\n                render: ({params, query, request}) => html`\n                  <${HtmlPage}>\n                    <h1>home</h1>\n                    <ul>\n                      <li>\n                        <${Await} promise=${() => new Promise(r => setTimeout(() => r({foo:'foo'}), 3000))}>\n                          ${({ pending, success }, data) => html`\n                            ${when(pending, () => html`[PENDING] slow`)}\n                            ${when(success, () => html`[RESOLVED] slow ${data.foo}`)}\n                          `}\n                        <//>\n                      </li> \n                      <li>\n                        <${Await} promise=${() => new Promise(r => setTimeout(() => r({bar:'bar'}), 1500))}>\n                          ${({pending, success}, data) => html`\n                            ${when(pending, () => html`[PENDING] fast`)}\n                            ${when(success, () => html`[RESOLVED] fast ${data.bar}`)}\n                          `}\n                        <//>\n                      </li>\n                    </ul>\n                    <h2>footer</h2>\n                  <//>\n                `\n              },\n        ],\n        fallback: `<html><body><h1>404</h1></body></html>`,\n        // plugin: () =>('<html><body><h1>Render global plugin</h1></body></html>')\n    }\n);", "import { router } from './main';\n\nself.addEventListener('install', (event) => {\n    event.waitUntil(self.skipWaiting());\n    console.log('service worker installed', event);\n});\n\nself.addEventListener('activate', (event) => {\n    event.waitUntil(\n        self.clients.claim()\n      );\n    console.log('service worker activated', event);\n});\n\nself.addEventListener('fetch', (event) => {\n    if (event.request.mode === 'navigate') {\n        console.log('fetch', event);\n        event.respondWith(router.handleRequest(event.request));\n    }\n});"],
  "mappings": "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",
  "names": ["html", "pluginRes", "_a"]
}
